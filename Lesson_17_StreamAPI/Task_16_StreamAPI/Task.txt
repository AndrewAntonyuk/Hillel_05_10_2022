ВАЖНО! Все задания выполняются исключительно с применением Stream API



1.1 Дан класс Product, который состоит из свойств: 

- тип

- цена

1.2 Реализовать метод получения всех продуктов в виде списка, категория которых эквивалентна “Book” и цена более чем 250.



2.1 Дан класс Product, который состоит из свойств: 

- тип

- цена

- возможность применения скидки

2.2 Реализовать метод получения всех продуктов в виде списка, категория которых эквивалентна “Book” и с возможностью применения скидки. Финальный список должен содержать продукты с уже примененной скидкой 10%. 

Так если Продукт A был с ценой 1.0 USD, то его финальная цена будет оставлять 0.9 USD



3.1 Дан класс Product, который состоит из свойств: 

- тип

- цена

- возможность применения скидки

3.2 Реализовать метод получения самого дешевого продукта из категории “Book”

3.3 В случае, если ни один продукт не найден (ситуация, когда нет продукта с искомой категорией), выбросить исключение с сообщением “Продукт [категория: имя_категории] не найден”.



4.1 Дан класс Product, который состоит из свойств: 

- тип

- цена

- возможность применения скидки

- дата добавления (можно использовать тип данных java.time.LocalDate, java.time.LocalDateTime или java.util.Date)

4.2 Реализовать метод получения трех последних добавленных продуктов



5.1 Дан класс Product, который состоит из свойств: 

- тип

- цена

- возможность применения скидки

- дата добавления (можно использовать тип данных java.time.LocalDate, java.time.LocalDateTime или java.util.Date)

5.2 Реализовать метод калькуляции общей стоимости продуктов, которые отвечаю следующим критериям:

- продукт добавлен в течении текущего года

- продукт имеет тип “Book”

- цена продукта не превышает 75



** 6.1 Дан класс Product, который состоит из свойств: 

- идентификационный номер

- тип

- цена

- возможность применения скидки

- дата добавления (можно использовать тип данных java.time.LocalDate, java.time.LocalDateTime или java.util.Date)

** 6.2 Реализовать метод группирования объектов по типу продукта. Таким образом результатом выполнения метода 

будет тип данных “Словарь” хранящий пару ключ-значение: {тип: список_продуктов}



Например:

{
	“Book”, 
	[
		{type: “Book”, price: 100, discount: false, createDate: 01-01-2022}, 
		{…}, 
		{…}
	]
},
{
	“Toy”, 
	[
		{type: “Toy”, price: 100, discount: true, createDate: 10–102022}, 
		{…}
	]
}